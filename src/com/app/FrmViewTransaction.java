/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.app;

import static java.sql.DriverManager.getConnection;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;

public class FrmViewTransaction extends javax.swing.JFrame {

    public FrmViewTransaction() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        this.viewTable();
        Staff();
        Client();
        GenerateID();
        
        SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
        String date = f.format(new Date());
        
        this.txtDate.setText(date);
    }
    
    private void GenerateID(){
        try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblSales";

            ResultSet rs = SQLite.stmt.executeQuery(query);
            int genID = 1;
            while(rs.next()){
                int id= Integer.parseInt(rs.getString("SalesID"));
                
                genID = id+1;
            }
            if(genID == 1){
                this.txtID.setText(String.valueOf(genID));
            }else{
                this.txtID.setText(String.valueOf(genID));
            }
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }
    }
    
    private void Staff(){
       try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblCashier";

            ResultSet rs = SQLite.stmt.executeQuery(query);
            while(rs.next()){
                String name= rs.getString("FirstName");
                this.cbStaff.addItem(name);
            }
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }
    }
    
    private void Client(){
       try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblCustomer";

            ResultSet rs = SQLite.stmt.executeQuery(query);
            while(rs.next()){
                String name= rs.getString("FirstName");
                this.cbClient.addItem(name);
            }
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }
    }
    
    public void viewTable(){
        if (SQLite.openDB()) {
            String[][] data = SQLite.read("tblSales");
            String[] column = {"SalesID", "Sales_Date", "CustomerID", "CashierID"};
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(data, column);
            this.tblTransactionSales.setModel(model);
            SQLite.closeDB();
        }
        this.refreshTable();
    }
    
        public void refreshTable(){
        //Load data
        if(SQLite.openDB()){

            String[] columns = {"SalesID", "Sales_Date", "CustomerID", "CashierID"};
            String[][] records = SQLite.read2("tblSales",columns);
            javax.swing.table.DefaultTableModel model = new javax.swing.table.DefaultTableModel(records, columns){
                public boolean isEditable(){
                    return false;
                }
            };
            
            SQLite.closeDB();
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTransactionSales = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnViewProduct = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtID_view = new javax.swing.JTextField();
        txtID_delete = new javax.swing.JTextField();
        txtID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cbStaff = new javax.swing.JComboBox<>();
        btnSubmit = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbClient = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTransactionSales.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTransactionSales.setEnabled(false);
        jScrollPane1.setViewportView(tblTransactionSales);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 570, 280));

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 580, 110, 30));

        btnViewProduct.setBackground(new java.awt.Color(0, 255, 255));
        btnViewProduct.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnViewProduct.setText("View");
        btnViewProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewProductActionPerformed(evt);
            }
        });
        jPanel1.add(btnViewProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 450, 110, 30));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Sales ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 110, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Sales ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 110, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Product Sales");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 40));

        txtID_view.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtID_view, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, 110, -1));

        txtID_delete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtID_delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 550, 110, -1));

        txtID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtID.setEnabled(false);
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 410, 140, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("CashierID");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));

        cbStaff.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(cbStaff, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, 140, -1));

        btnSubmit.setBackground(new java.awt.Color(0, 102, 255));
        btnSubmit.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSubmit.setText("Add new Sales Transaction");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        jPanel1.add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 570, 280, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("SalesID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Customer ID");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, -1, -1));

        cbClient.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jPanel1.add(cbClient, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 490, 140, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Sales Date");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 450, -1, -1));

        txtDate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtDate.setEnabled(false);
        jPanel1.add(txtDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 450, 140, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Add New Transaction");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    try{
       if(SQLite.openDB()){
           String[][] r = SQLite.read1("tblSales", "SalesID=" + this.txtID_delete.getText());
           if(r.length > 0){
            if(SQLite.delete1("tblSales", "SalesID= " + Integer.parseInt(this.txtID_delete.getText()))){
                SQLite.delete("tblSales_Details", Integer.parseInt(this.txtID_delete.getText()));
                javax.swing.JOptionPane.showMessageDialog(null, "Deleted!");
             }
             else{
                 javax.swing.JOptionPane.showMessageDialog(null, "Delete Error!");
             }
           }
           else{
               javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Sales ID");
           }
        }
    }catch(Exception e){
        javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Sales ID");
    }
     SQLite.closeDB();
    this.viewTable();
    this.txtID_delete.setText("");
    this.txtID_view.setText("");
    }//GEN-LAST:event_btnDeleteActionPerformed

    public static int Tid;
    public static int transactionid;
    private void btnViewProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewProductActionPerformed
        try{
           if(SQLite.openDB()){
               String[][] r = SQLite.read1("tblSales", "SalesID=" + this.txtID_view.getText());
               if(r.length > 0){
               transactionid = Integer.parseInt(this.txtID_view.getText());
        
               FrmViewProduct m = new FrmViewProduct();
               m.setVisible(true);
               dispose();
               }
               else{
                   javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Sales ID");
               }
            }
        }catch(Exception e){
            javax.swing.JOptionPane.showMessageDialog(null, "Cannot find Sales ID");
        }
         SQLite.closeDB();
         this.refreshTable();
    }//GEN-LAST:event_btnViewProductActionPerformed

    public static int staff, client;
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        if(SQLite.openDB()){
            try{
                SQLite.conn = getConnection(SQLite.url);
                SQLite.stmt = SQLite.conn.createStatement();
                String query = "select CashierID from tblCashier where FirstName='" + this.cbStaff.getSelectedItem() + "'";

                ResultSet rs = SQLite.stmt.executeQuery(query);
                while(rs.next()){
                    String name= rs.getString("CashierID");
                    staff = Integer.parseInt(name);
                }

                String q = "select CustomerID from tblCustomer where FirstName='" + this.cbClient.getSelectedItem() + "'";

                ResultSet rss = SQLite.stmt.executeQuery(q);
                while(rss.next()){
                    String name= rss.getString("CustomerID");
                    client = Integer.parseInt(name);
                }

                String date = this.txtDate.getText();

                String values = "'" + date + "','"+ staff + "','" + client + "'";
                String set = "Sales_Date, CustomerID, CashierID";

                SQLite.create("tblSales", set, values);
                javax.swing.JOptionPane.showMessageDialog(null, "New Transaction Created!");
                this.viewTable();
                this.txtID_delete.setText("");
                this.txtID_view.setText("");
            }
            catch(Exception e){
                javax.swing.JOptionPane.showMessageDialog(null, "Create Error: " + e.getMessage());
            }

            SQLite.closeDB();
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmViewTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmViewTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmViewTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmViewTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmViewTransaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnViewProduct;
    private javax.swing.JComboBox<String> cbClient;
    private javax.swing.JComboBox<String> cbStaff;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTransactionSales;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtID_delete;
    private javax.swing.JTextField txtID_view;
    // End of variables declaration//GEN-END:variables
}
