package com.app;

import static com.app.FrmViewProduct.carID;
import static com.app.FrmViewTransaction.transactionid;
import static com.app.SQLite.conn;
import static com.app.SQLite.stmt;
import static com.app.SQLite.url;
import static java.sql.DriverManager.getConnection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;

public class FrmUpdateTransaction extends javax.swing.JFrame {

    /**
     * Creates new form FrmUpdateTransaction
     */
    public FrmUpdateTransaction() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        if(SQLite.openDB()){
            String[][] r = SQLite.read("tblSales_Details", carID);
            this.lblID.setText(r[0][0]);
            this.lblSdate.setText(r[0][1]);
            this.lblTno.setText(r[0][2]);
            
            SQLite.closeDB();
        }
        Product();
    }
    
    
    private void Product(){
       try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblProduct";

            ResultSet rs = SQLite.stmt.executeQuery(query);
            while(rs.next()){
                String no= rs.getString("ProductID");
                this.cbProduct.addItem(no);
            }
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }
    }
    
    private boolean checkRentalSchedule(){
        boolean valid = false;
        try {
            conn = getConnection(url);
            stmt = conn.createStatement();
            
            int id = Integer.parseInt(this.cbProduct.getSelectedItem().toString());
            SimpleDateFormat dateFormat1 = new SimpleDateFormat("yyyy-MM-dd");
            String dateStart = this.lblSdate.getText();
            
            System.out.println("SalesDetailsID = " + id);

                String query = "select * from tblSales_Details where ProductID='"+id+"' and '"+dateStart+"' between sdate " +
                            " or ProductID='"+id+"' and sdate or" + 
                            " ProductID='"+id+"' and sdate '"+dateStart+"' or " + 
                            " ProductID='"+id+"' and edate "+dateStart+"'";
            
                ResultSet rss = stmt.executeQuery(query);
            
            if(rss.next()){
                System.out.println("FOUND!");
                valid = true;
            }else
                System.out.println("NOT FOUND!");
            
            
            conn.close();
        } catch (SQLException ex) {
            
        }
                
        return valid; 
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbClient = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        lblSdate = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        lblTno = new javax.swing.JLabel();
        cbProduct = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        txtSupname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtProductname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        cbClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbClientActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSdate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblSdate.setText("jLabel1");
        jPanel1.add(lblSdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 104, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Sales Date");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 104, -1, -1));

        jButton1.setBackground(new java.awt.Color(0, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButton1.setText("UPDATE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 338, 280, -1));

        lblTno.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblTno.setText("jLabel1");
        jPanel1.add(lblTno, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 139, -1, -1));

        cbProduct.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cbProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProductActionPerformed(evt);
            }
        });
        jPanel1.add(cbProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 176, 112, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Product ID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 177, -1, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Sales Details ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 69, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Sales ID");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 139, -1, -1));

        lblID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblID.setText("jLabel1");
        jPanel1.add(lblID, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 69, -1, -1));

        txtSupname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtSupname.setEnabled(false);
        jPanel1.add(txtSupname, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 254, 112, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Supplier Name");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 255, -1, -1));

        txtProductname.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        txtProductname.setEnabled(false);
        jPanel1.add(txtProductname, new org.netbeans.lib.awtextra.AbsoluteConstraints(162, 215, 112, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Product Name");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 216, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Update Transaction");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public boolean validateProduct(){
        boolean result = false;
        int product_id = 0;
        int sales_id = 0;
        System.out.println("Validating... \n");
            
        try{
            conn = getConnection(url);
            stmt = conn.createStatement();
            
            String query = "select * from tblSales_Details where salesid =" + transactionid ;
            
            ResultSet rs = stmt.executeQuery(query);
            
            while(rs.next()){
                product_id = Integer.parseInt(rs.getString("ProductID"));
                if(product_id == Integer.parseInt(cbProduct.getSelectedItem().toString())){
                    System.out.println("Found!");
                    result = true;
                }
            }
        } catch(Exception e){
            System.out.println("Not Found!");
        }
        
        return result;
    }
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(checkRentalSchedule()){
            javax.swing.JOptionPane.showMessageDialog(null, "Your selected date is not valid");
        } else if(validateProduct()){
            javax.swing.JOptionPane.showMessageDialog(null, "Try Another ProductID");
        }else{
            if(SQLite.openDB()){
               try{
                   SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd");
                   String values = "ProductID = '" + this.cbProduct.getSelectedItem() + "'";
                   SQLite.update("tblSales_Details", values, carID);
                   
                   javax.swing.JOptionPane.showMessageDialog(null, "Updated!");
                   dispose();
               }
               catch(Exception e){
                   javax.swing.JOptionPane.showMessageDialog(null, e.getMessage());
               }
               SQLite.closeDB();
           }   
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cbClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbClientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbClientActionPerformed

    private void cbProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProductActionPerformed
       try{
            SQLite.conn = getConnection(SQLite.url);
            SQLite.stmt = SQLite.conn.createStatement();
            String query = "select * from tblProduct where ProductID=" + this.cbProduct.getSelectedItem();
            String query2 = "select * from tblSupplier where SupplierID=" + this.cbProduct.getSelectedItem();
            
            ResultSet rs = SQLite.stmt.executeQuery(query);
            while(rs.next()){
                String name= rs.getString("ProductID");
                this.txtProductname.setText(rs.getString("Product_Name"));
            }
            
             ResultSet rss = SQLite.stmt.executeQuery(query2);
            while(rss.next()){
                String name= rss.getString("SupplierID");
                this.txtSupname.setText(rs.getString("Supplier_Name"));
            }
       }
       catch(Exception e){
           System.out.println("error: " + e.getMessage());
       }

    }//GEN-LAST:event_cbProductActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUpdateTransaction.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUpdateTransaction().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbClient;
    private javax.swing.JComboBox<String> cbProduct;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblSdate;
    private javax.swing.JLabel lblTno;
    private javax.swing.JTextField txtProductname;
    private javax.swing.JTextField txtSupname;
    // End of variables declaration//GEN-END:variables
}
